Продумать взаимодействие модели данных, представлений и хранилища.

  библиотека должна позволять создавать на клиенте три категории объектов:
    клерк - ходит в базу, относя и принося данные
    модель - работает с клерком, держит в памяти данные для работы, считающиеся в приложении актуальными
    вид - работает с моделью, показывает пользователю данные согласно шаблону, обращается с его командами в модель

  Каждый из них должен быть способен работать в активном и в пассивном режиме.
    Пассивный предполагает, что поступает нечто в приготовленное место, и объект знает, что с этим делать, и делает.
    Активный предполагает, что вызывается метод объекта, по которому он может и к другим ходить, делая то, что нужно.
    Примеры:
      Модель помещает в вид данные для показа - он их показывает.
      Вызывается метод вида, согласно которому он идёт-берёт данные в модели сам и показывает их.

  для работы всех трёх компонентов библиотеки на клиенте без бэкэнда нужна модель, изображающая из себя базу данных, фальсифицируя fetch-запросы к базе

  В окне браузера прямое управление данными в ней обеспечивается напрямую - без fetch-запросов, которые работают с искусственной задержкой, зависящей от объёма идущих данных

  Я исхожу из того, что в базе может быть очень много данных в таблице. Запрашивать их все - нецелесообразно, а с дальнейшим ростом - и не реалистично. Запрос должен подразумевать лишь некоторое количество строк - оно должно указываться в параметрах.
      Я хочу, чтобы пользователь выбирал в виде, сколько строк хочет видеть, а при запросе посылался запрос именно на такое количество строк, следом за которым посылался бы следующий на ещё одно такое же количество идущих следом. И, возможно, на ещё одно...
          Полученные позднее строки должны добавляться к модели


  Настройки Вида:
    Количество строк на странице: 10, 25, 50, 100, 250, 500, все (на самом деле должно работать как endless scroll)
    Колонки/Поля данных: перечень скрытых, которым фильтруется перечень всех
    Поверхностная сортировка (только уже доставленных и содержащихся в памяти записей)
    Глубокая сортировка (перезапрашивающая записи согласно указанному критерию)
    Номер записи, с которой начинается текущая страница

  Модель должна знать:
    Сколько записей в базе

  Клерк должен знать:
    Куда ходить с/за данными
